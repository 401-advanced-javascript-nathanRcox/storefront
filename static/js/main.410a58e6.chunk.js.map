{"version":3,"sources":["store/products-reducer.js","components/header.js","components/footer.js","store/categories-reducer.js","components/categories.js","store/cart-reducer.js","components/products.js","components/simple-cart.js","App.js","store/API-reducer.js","store/index.js","index.js"],"names":["initialState","products","API","process","getAction","payload","type","decrement","item","productSelection","state","action","map","selection","name","inventoryCount","console","log","items","blah","mapDispatchToProps","get","dispatch","superagent","then","response","body","connect","cart","cartCount","props","getSomething","a","useEffect","AppBar","className","color","position","Container","maxWidth","Grid","container","direction","justify","alignItems","Typography","variant","to","Footer","categories","display","description","active","selectCategory","categorySelection","category","idx","Link","component","onClick","quantityInCart","forEach","value","addItem","decrementPut","object","put","_id","send","activeCategory","product","Card","CardContent","price","changeQuantity","updateQuantity","App","exact","path","initalState","APIswitch","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.410a58e6.chunk.js","sourcesContent":["// The Products Reducer.\nimport superagent from 'superagent';\n\nconst initialState = { products: [] }\n  // products: [\n  //   { category: 'pickaxes', name: 'wooden pickax', description: 'Minecraft Wooden Pickax', price: 'Two Sticks', inventoryCount: 5, quantityInCart: 0 },\n  //   { category: 'pickaxes', name: 'stone pickax', description: 'Minecraft Stone Pickax', price: 'Two Rocks', inventoryCount: 3, quantityInCart: 0 },\n  //   { category: 'pickaxes', name: 'diamond pickax', description: 'Minecraft Diamond Pickax', price: 'One Diamond', inventoryCount: 1, quantityInCart: 0 },\n  //   { category: 'swords', name: 'wooden sword', description: 'Minecraft Wooden Sword', price: 'Two Sticks', inventoryCount: 5, quantityInCart: 0 },\n  //   { category: 'swords', name: 'stone sword', description: 'Minecraft Stone Sword', price: 'Two Rocks', inventoryCount: 3, quantityInCart: 0 },\n  //   { category: 'swords', name: 'diamond sword', description: 'Minecraft Diamond Sword', price: 'One Diamond', inventoryCount: 1, quantityInCart: 0 },\n  //   { category: 'helmets', name: 'wooden helmet', description: 'Minecraft Wooden Helmet', price: 'Two Sticks', inventoryCount: 5, quantityInCart: 0 },\n  //   { category: 'helmets', name: 'stone helmet', description: 'Minecraft Stone Helmet', price: 'Two Rocks', inventoryCount: 3, quantityInCart: 0 },\n  //   { category: 'helmets', name: 'diamond helmet', description: 'Minecraft Diamond Helmet', price: 'One Diamond', inventoryCount: 1, quantityInCart: 0 },\n  // ]\n\n// export const renderProducts = (category) => {\n//   return {\n//     type: 'DISPLAY-PRODUCTS',\n//     payload: category\n//   };\n// };\n\nconst API = process.env.REACT_APP_API\n\nexport const get = () => dispatch => {\n  console.log('GET in API');\n  return superagent.get(`${API}`)\n  .then(response => {\n    dispatch(getAction(response.body));\n  });\n};\n\nexport const getAction = payload => {\n  return {\n    type: 'GET',\n    payload: payload,\n  };\n};\n\nexport const decrementPut = (item) => dispatch => {\n  let object = {...item, inventoryCount: item.inventoryCount-1};\n  console.log({object});\n  return superagent.put(`${API}/${object._id}`)\n    .send(object)\n    .then(response => {\n      console.log('Response:', response.body);\n      dispatch(decrement(response.body));\n    });\n}\n\nexport const increment = (name) => {\n  return {\n    type: 'INCREMENT',\n    payload: name,\n  };\n};\n\nexport const decrement = (item) => {\n  return {\n    type: 'DECREMENT',\n    payload: item\n  };\n};\n\nconst productSelection = (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case 'INCREMENT': \n      let products = state.products.map(selection => {\n        if (selection.name === payload.name) {\n          return { ...selection, inventoryCount: selection.inventoryCount + 1 }\n        }\n        return selection;\n      });\n      return {...state, products};\n\n      case 'GET':\n        return {products: payload};\n\n      case 'DECREMENT':\n        console.log('Payload in Decrement:', payload.name)\n        let items = state.products.map(item => {\n          if (item.name === payload.name) {\n            return { ...item, inventoryCount: item.inventoryCount - 1}\n          }\n          return item;\n        });\n\n        let blah = {products: items};\n        console.log('BLAH:', blah);\n        return blah;\n\n      case 'RESET':\n        return initialState;\n\n      default: \n      return state;\n  }\n}\n\nexport default productSelection;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { get } from '../store/products-reducer';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n// AppBar color options: \"default\",\"inherit\",\"primary\",\"secondary\",\"transparent\".\n// variant for the cart's link button include: \"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"subtitle1\",\"subtitle2\",\"body1\",\"body2\",\"caption\",\"button\",\"overline\",\"srOnly\",\"inherit\"\n\nconst mapDispatchToProps = { get };\n\nfunction Header(props){\n\n  const getSomething = async () => {\n  await props.get();\n}\n\nuseEffect(() => getSomething(), []);\n\n  return(\n  <AppBar className=\"AppBar\" color=\"transparent\" position=\"static\">\n    <Container maxWidth='md'>\n      <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n        <Typography variant=\"h1\">\n          <Link to=\"/\">\n          StoreFrontPorch\n          </Link>\n        </Typography>\n        <Typography >\n          <Link to=\"/cart\" variant=\"h5\">\n            Cart ({props.cartCount})\n          </Link>\n        </Typography>\n      </Grid>\n    </Container>\n  </AppBar>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  cart: state.cart,\n  cartCount: state.cart.cartCount\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\n\nfunction Footer(props){\n  return(\n  <footer className=\"footer\">\n    <h6>&copy; nathanrhead</h6>\n    <h6>mc-store@email.com</h6>\n  </footer>\n  )\n};\n\nexport default Footer;\n","// The Categories Reducer.\n\nconst initialState = {\n  categories: [\n    { name: 'pickaxes', display: 'Pickaxes', description: 'Minecraft Pickaxes' },\n    { name: 'swords', display: 'Swords', description: 'Minecraft Swords' },\n    { name: 'helmets', display: 'Helmets', description: 'Minecraft Helmets' },\n    ],\n    active: ''\n};\n\nexport const categorySelection = (name) => {\nreturn {\n  type: 'SELECT-CATEGORY',\n  payload: name\n  };\n};\n\nexport const reset = () => {\n  return {\n    type: 'RESET-CATEGORY'\n  };\n};\n\nconst selectCategory = (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n\n    case 'SELECT-CATEGORY': \n          return {...state, active: payload };\n\n    case 'RESET':\n      return initialState;\n\n    default: \n      return state;\n  }\n}\n\nexport default selectCategory;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nimport { connect } from 'react-redux';\nimport { categorySelection } from '../store/categories-reducer';\n// import { get } from '../store/API-reducer';\n\nconst mapDispatchToProps = { categorySelection };\n\nfunction SelectCategory(props) {\n\n  const selectedCategory = (name) => {\n    props.categorySelection(name);\n  };\n\n  return (\n    <Container maxWidth='md'>\n        <Typography variant=\"h5\">\n          Browse Our Categories\n        </Typography>\n        <Typography variant=\"h5\">\n            {props.category.categories.map((\n              selection, idx) => (\n                <div key={idx}>\n                  <Link to=\"/\" component=\"button\" variant=\"body2\" color=\"inherit\" onClick={() => selectedCategory(selection.name)}>\n                    {selection.description}\n                  </Link>\n                </div>\n              )\n            )}\n        </Typography>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({ \n  category: state.categories\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectCategory);\n","// The cart reducer.\n\nimport productSelection from \"./products-reducer\";\n\nconst initialState = {\n  cart: [],\n  cartCount: 0,\n};\n\n// Actions go here\nexport const addItem = (item) => {\n  return {\n    type: 'ADD-ITEM',\n    payload: item,\n  };\n};\n\nexport const changeQuantity = (item) => {\n  return {\n    type: 'CHANGE-QUANTITY',\n    payload: item,\n  }\n}\n\nconst cart = (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case 'ADD-ITEM':\n      payload = {...payload, quantityInCart: payload.quantityInCart+1}\n      return {...state, cart: [...state.cart, payload], cartCount: state.cartCount+1};\n\n    case 'CHANGE-QUANTITY':\n      state.cart.forEach(value => {\n      if (value.name === payload.name) {\n        payload = {...payload, quantityInCart: payload.quantityInCart+1}\n      }\n    })\n    return {...state, cart: [...state.cart, payload], cartCount: state.cartCount+1};\n\n    default:\n      return state; \n  }\n}\n\nexport default cart; \n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../store/cart-reducer';\nimport { decrementPut } from '../store/products-reducer';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n// import Link from '@material-ui/core/Link';\nimport Card from '@material-ui/core/Card';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import Button from '@material-ui/core/Button';\n// import { Portal } from '@material-ui/core';\n\nconst mapDispatchToProps = { addItem, decrementPut };\n\nfunction Products(props) {\n  console.log('Props on Products:', props.state);\n  const selectedProduct = (name) => {\n    props.addItem(name);\n    props.decrementPut(name);\n    // console.log('Props.state on products:', props.state);\n  }\n\n  // Use to further style the cards: https://material-ui.com/components/cards/#simple-card\n  return (\n    <Container maxWidth='md'>\n        {props.products.products.map((product, idx) => (\n          <>\n            <Card>            \n              {(props.activeCategory === product.category) ?\n                <CardContent key={idx}>\n                  <Typography>\n                    {product.description}\n                  </Typography>\n                  <Typography>\n                    Price: {product.price}\n                  </Typography>\n                  <Typography>\n                    Number in Stock: {product.inventoryCount}\n                  </Typography>\n                  <button onClick={() => selectedProduct(product)}>\n                    Add to Cart\n                  </button>\n                </CardContent>\n                : ''\n              }\n            </Card>\n          </>\n        ))}\n  </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  state,\n  products: state.products,\n  activeCategory: state.categories.active,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeQuantity } from '../store/cart-reducer';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst mapDispatchToProps = { changeQuantity };\n\nfunction Cart(props) {\n  console.log('Props on Cart:', props);\n  \n  // Callback functions go here.\n  const updateQuantity = (item) => {\n    props.changeQuantity(item);\n  }\n\n  return (\n    <Container maxWidth='md'>\n      <Typography variant=\"h3\">\n        Your Cart\n      </Typography>\n      <Card > \n        {props.product.cart.map((item, idx) => (\n          <CardContent key={idx}>\n            <Typography color=\"secondary\">\n              Category: {item.category}\n            </Typography>\n            <Typography>\n              Description: {item.description}\n            </Typography>\n            <Typography>\n              Price: {item.price}\n            </Typography>\n            <button onClick={()=> updateQuantity(item)}>Up this item</button>\n          </CardContent>\n        ))}\n      </Card> \n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  product: state.cart,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Categories from './components/categories';\nimport Products from './components/products';\nimport Cart from './components/simple-cart';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <Categories />\n              <Products />\n            </Route>\n            {/* <Route exact path=\"/products\"> */}\n            {/* </Route> */}\n            <Route exact path=\"/cart\">\n              <Cart />\n            </Route>\n          </Switch>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","\nlet initalState = [] ;\n\n// Actions\n// export const get = () => dispatch => {\n\n//   console.log('GET in API');\n\n//   return superagent.get('https://nrc-api-auth.herokuapp.com/api/v1/storefront')\n//   .then(response => {\n//     dispatch(getAction(response.body));\n//   });\n// };\n\n// export const getAction = payload => {\n//   return {\n//     type: 'GET',\n//     payload: payload,\n//   };\n// };\n\n// Reducer\nconst APIswitch = (state=initalState, action) => {\n  let { type, payload } = action;\n  switch(type) {\n    case 'GET':\n      return {...state, payload};\n    \n    default:\n      return state;\n  };\n};\n\nexport default APIswitch;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport categories from './categories-reducer';\nimport products from './products-reducer';\nimport cart from './cart-reducer';\nimport API from './API-reducer'\n\nlet reducers = combineReducers({ categories, products, cart, API });\n\nconst store = () => {\n  return createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n}\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <CssBaseline />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}