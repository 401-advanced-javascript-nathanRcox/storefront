{"version":3,"sources":["components/header.js","components/footer.js","store/categories-reducer.js","components/categories.js","store/cart-reducer.js","store/products-reducer.js","components/products.js","components/simple-cart.js","App.js","store/index.js","index.js"],"names":["connect","state","cart","cartCount","props","useEffect","console","log","AppBar","className","color","position","Container","maxWidth","Grid","container","direction","justify","alignItems","Typography","variant","to","Footer","initialState","categories","name","display","description","active","selectCategory","action","type","payload","mapDispatchToProps","categorySelection","category","map","selection","idx","Link","component","onClick","products","price","inventoryCount","productSelection","items","item","addItem","decrement","activeCategory","product","Card","CardContent","App","exact","path","reducers","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.c49c9ee7.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n// AppBar color options: \"default\",\"inherit\",\"primary\",\"secondary\",\"transparent\".\n// variant for the cart's link button include: \"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"subtitle1\",\"subtitle2\",\"body1\",\"body2\",\"caption\",\"button\",\"overline\",\"srOnly\",\"inherit\"\n\nconst mapDispatchToProps = { };\n\nfunction Header(props){\n\n  useEffect(() => console.log('Props on header:', props), [props]);\n\n  return(\n  <AppBar className=\"AppBar\" color=\"transparent\" position=\"static\">\n    <Container maxWidth='md'>\n      <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n        <Typography variant=\"h1\">\n          <Link to=\"/\">\n          StoreFrontPorch\n          </Link>\n        </Typography>\n        <Typography >\n          <Link to=\"/cart\" variant=\"h5\">\n            Cart ({props.cartCount})\n          </Link>\n        </Typography>\n      </Grid>\n    </Container>\n  </AppBar>\n  )\n};\n\nconst mapStateToProps = (state) => ({\n  cart: state.cart,\n  cartCount: state.cart.cartCount\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\n\nfunction Footer(props){\n  return(\n  <footer className=\"footer\">\n    <h6>&copy; nathanrhead</h6>\n    <h6>mc-store@email.com</h6>\n  </footer>\n  )\n};\n\nexport default Footer;\n","// The Categories Reducer.\n\nconst initialState = {\n  categories: [\n    { name: 'pickaxes', display: 'Pickaxes', description: 'Minecraft Pickaxes' },\n    { name: 'swords', display: 'Swords', description: 'Minecraft Swords' },\n    { name: 'helmets', display: 'Helmets', description: 'Minecraft Helmets' },\n    ],\n    active: ''\n};\n\nexport const categorySelection = (name) => {\nreturn {\n  type: 'SELECT-CATEGORY',\n  payload: name\n  };\n};\n\nexport const reset = () => {\n  return {\n    type: 'RESET-CATEGORY'\n  };\n};\n\nconst selectCategory = (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n\n    case 'SELECT-CATEGORY': \n          return {...state, active: payload };\n\n    case 'RESET':\n      return initialState;\n\n    default: \n      return state;\n  }\n}\n\nexport default selectCategory;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nimport { connect } from 'react-redux';\nimport { categorySelection } from '../store/categories-reducer';\n\nconst mapDispatchToProps = { categorySelection };\n\nfunction SelectCategory(props) {\n  console.log('Props on Categories:', props);\n\n  const selectedCategory = (name) => {\n    props.categorySelection(name);\n  };\n\n  return (\n    <Container maxWidth='md'>\n        <Typography variant=\"h5\">\n          Browse Our Categories\n        </Typography>\n        <Typography variant=\"h5\">\n            {props.category.categories.map((\n              selection, idx) => (\n                <div key={idx}>\n                  <Link to=\"/\" component=\"button\" variant=\"body2\" color=\"inherit\" onClick={() => selectedCategory(selection.name)}>\n                    {selection.description}\n                  </Link>\n                </div>\n              )\n            )}\n        </Typography>\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({ \n  category: state.categories\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectCategory);\n","// The cart reducer.\n\nconst initialState = {\n  cart: [],\n  cartCount: 0,\n};\n\n// Actions go here\nexport const addItem = (item) => {\n  return {\n    type: 'ADD-ITEM',\n    payload: item,\n  };\n};\n\nconst cart = (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case 'ADD-ITEM':\n      return {...state, cart: [...state.cart, payload], cartCount: state.cartCount+1};\n\n    default:\n      return state; \n  }\n}\n\nexport default cart; \n","// The Products Reducer.\n\nconst initialState = {\n  products: [\n    { category: 'pickaxes', name: 'wooden pickax', description: 'Minecraft Wooden Pickax', price: 'Two Sticks', inventoryCount: 5 },\n    { category: 'pickaxes', name: 'stone pickax', description: 'Minecraft Stone Pickax', price: 'Two Rocks', inventoryCount: 3 },\n    { category: 'pickaxes', name: 'diamond pickax', description: 'Minecraft Diamond Pickax', price: 'One Diamond', inventoryCount: 1 },\n    { category: 'swords', name: 'wooden sword', description: 'Minecraft Wooden Sword', price: 'Two Sticks', inventoryCount: 5 },\n    { category: 'swords', name: 'stone sword', description: 'Minecraft Stone Sword', price: 'Two Rocks', inventoryCount: 3 },\n    { category: 'swords', name: 'diamond sword', description: 'Minecraft Diamond Sword', price: 'One Diamond', inventoryCount: 1 },\n    { category: 'helmets', name: 'wooden helmet', description: 'Minecraft Wooden Helmet', price: 'Two Sticks', inventoryCount: 5 },\n    { category: 'helmets', name: 'stone helmet', description: 'Minecraft Stone Helmet', price: 'Two Rocks', inventoryCount: 3 },\n    { category: 'helmets', name: 'diamond helmet', description: 'Minecraft Diamond Helmet', price: 'One Diamond', inventoryCount: 1 },\n  ]\n};\n\nexport const renderProducts = (category) => {\n  return {\n    type: 'DISPLAY-PRODUCTS',\n    payload: category\n  };\n};\n\nexport const increment = (name) => {\n  return {\n    type: 'INCREMENT',\n    payload: name,\n  };\n};\n\nexport const decrement = (item) => {\n  return {\n    type: 'DECREMENT',\n    payload: item.name\n  };\n};\n\nconst productSelection = (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case 'INCREMENT': \n      let products = state.products.map(selection => {\n        if (selection.name === payload) {\n          return { ...selection, inventoryCount: selection.inventoryCount + 1 }\n        }\n        return selection;\n      });\n\n      return {...state, products};\n\n      case 'DECREMENT':\n        console.log('Payload in Decrement:', payload)\n        let items = state.products.map(item => {\n          if (item.name === payload) {\n            return { ...item, inventoryCount: item.inventoryCount - 1}\n          }\n          return item;\n        });\n\n        return {...state, products: items};\n\n      case 'RESET':\n        return initialState;\n\n      default: \n      return state;\n  }\n}\n\nexport default productSelection;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../store/cart-reducer';\nimport { decrement } from '../store/products-reducer';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n// import Link from '@material-ui/core/Link';\nimport Card from '@material-ui/core/Card';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import Button from '@material-ui/core/Button';\n// import { Portal } from '@material-ui/core';\n\nconst mapDispatchToProps = { addItem, decrement };\n\nfunction Products(props) {\n  console.log('Props on Products:', props.products);\n  const selectedProduct = (name) => {\n    props.addItem(name);\n    props.decrement(name);\n  }\n\n  useEffect(() => console.log('Props on Products:', props), [props]);\n\n  // Use to further style the cards: https://material-ui.com/components/cards/#simple-card\n  return (\n    <Container maxWidth='md'>\n        {props.products.products.map((product, idx) => (\n          <>\n            <Card>            \n              {(props.activeCategory === product.category) ?\n                <CardContent key={idx}>\n                  <Typography>\n                    {product.description}\n                  </Typography>\n                  <Typography>\n                    Price: {product.price}\n                  </Typography>\n                  <Typography>\n                    Number in Stock: {product.inventoryCount}\n                  </Typography>\n                  <button onClick={() => selectedProduct(product)}>\n                    Add to Cart\n                  </button>\n                </CardContent>\n                : ''\n              }\n            </Card>\n          </>\n        ))}\n  </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  activeCategory: state.categories.active,\n  products: state.products\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst mapDispatchToProps = { };\n\nfunction Cart(props) {\n  console.log('Props on Cart:', props);\n  // Callback functions go here.\n\n  return (\n    <Container maxWidth='md'>\n      <Typography variant=\"h3\">\n        Your Cart\n      </Typography>\n      <Card > \n        {props.product.cart.map((item, idx) => (\n          <CardContent key={idx}>\n            <Typography color=\"secondary\">\n              Category: {item.category}\n            </Typography>\n            <Typography>\n              Description: {item.description}\n            </Typography>\n            <Typography>\n              Price: {item.price}\n            </Typography>\n          </CardContent>\n        ))}\n      </Card> \n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  product: state.cart,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Categories from './components/categories';\nimport Products from './components/products';\nimport Cart from './components/simple-cart';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Header />\n          <switch>\n            <Route exact path=\"/\">\n              <Categories />\n              <Products />\n            </Route>\n            {/* <Route exact path=\"/products\"> */}\n            {/* </Route> */}\n            <Route exact path=\"/cart\">\n              <Cart />\n            </Route>\n          </switch>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport categories from './categories-reducer';\nimport products from './products-reducer';\nimport cart from './cart-reducer';\n\nlet reducers = combineReducers({ categories, products, cart });\n\nconst store = () => {\n  return createStore(reducers, composeWithDevTools());\n}\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <CssBaseline />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}