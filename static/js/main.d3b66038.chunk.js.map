{"version":3,"sources":["components/header.js","components/footer.js","store/categories-reducer.js","components/categories.js","store/products-reducer.js","components/products.js","App.js","store/index.js","index.js"],"names":["Header","props","AppBar","className","color","position","Container","maxWidth","Grid","container","direction","justify","alignItems","Typography","variant","Link","component","Footer","initialState","categories","name","display","description","active","categorySelection","type","payload","selectCategory","state","action","mapDispatchToProps","connect","category","console","log","map","selection","idx","onClick","products","price","inventoryCount","productSelection","increment","activeCategory","useEffect","id","product","Card","CardContent","App","reducers","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.d3b66038.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\n\n\nfunction Header(props){\n  return(\n  <AppBar className=\"AppBar\" color=\"white\" position=\"static\">\n    <Container maxWidth='md'>\n      <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n        <Typography variant=\"h1\">StoreFrontPorch</Typography>\n        <Typography >\n          <Link\n            component=\"button\"\n            variant=\"body2\"\n            color=\"inherit\"\n          >\n            Cart\n          </Link>\n        </Typography>\n      </Grid>\n    </Container>\n  </AppBar>\n  )\n};\n\nexport default Header;\n","import React from 'react';\n\nfunction Footer(props){\n  return(\n  <footer className=\"footer\">\n    <h6>&copy; nathanrhead</h6>\n    <h6>mc-store@email.com</h6>\n  </footer>\n  )\n};\n\nexport default Footer;\n","// The Categories Reducer.\n\nlet initialState = {\n  categories: [\n    { name: 'pickaxes', display: 'Pickaxes', description: 'Minecraft Pickaxes' },\n    { name: 'swords', display: 'Swords', description: 'Minecraft Swords' },\n    { name: 'helmets', display: 'Helmets', description: 'Minecraft Helmets' },\n    ],\n    active: ''\n};\n\nexport const categorySelection = (name) => {\nreturn {\n  type: 'SELECT-CATEGORY',\n  payload: name\n  };\n};\n\nexport const reset = () => {\n  return {\n    type: 'RESET-CATEGORY'\n  };\n};\n\nconst selectCategory = (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n\n    case 'SELECT-CATEGORY': \n          return {...state, active: payload };\n\n    case 'RESET':\n      return initialState;\n\n    default: \n      return state;\n  }\n}\n\nexport default selectCategory;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { categorySelection } from '../store/categories-reducer';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\n\nconst mapDispatchToProps = { categorySelection };\n\nfunction SelectCategory(props) {\n  console.log('Props on Categories:', props);\n\n  const selectedCategory = (name) => {\n    props.categorySelection(name);\n  };\n\n  return (\n    <Container maxWidth='md'>\n        <Typography variant=\"h5\">\n          Browse Our Categories\n        </Typography>\n        <Typography variant=\"h5\">\n            {props.category.categories.map((\n              selection, idx) => (\n                <div key={idx}>\n                  <Link component=\"button\" variant=\"body2\" color=\"inherit\" onClick={() => selectedCategory(selection.name)}>\n                    {selection.description}\n                  </Link>\n                </div>\n              )\n            )}\n        </Typography>\n\n        {/* <section id=\"category-selection\">\n          {props.category.categories.map((selection, idx) => (\n            <ul key={idx}>\n              <li>{selection.display}</li>\n              <li>{selection.description}</li>\n            <button onClick={() => selectedCategory(selection.name)}>Select this Category</button>\n            </ul>\n          ))}\n        </section> */}\n    </Container>\n  )\n}\n\nconst mapStateToProps = state => ({ \n  category: state.categories\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectCategory);\n","// The Products Reducer.\n\n//Each product should have a category association, name, description, price, inventory count.\nlet initialState = {\n  products: [\n    { category: 'pickaxes', name: 'wooden pickax', description: 'Minecraft Wooden Pickax', price: 'Two Sticks', inventoryCount: 5 },\n    { category: 'pickaxes', name: 'stone pickax', description: 'Minecraft Stone Pickax', price: 'Two Rocks', inventoryCount: 3 },\n    { category: 'pickaxes', name: 'diamond pickax', description: 'Minecraft Diamond Pickax', price: 'One Diamond', inventoryCount: 1 },\n    { category: 'swords', name: 'wooden sword', description: 'Minecraft Wooden Sword', price: 'Two Sticks', inventoryCount: 5 },\n    { category: 'swords', name: 'stone sword', description: 'Minecraft Stone Sword', price: 'Two Rocks', inventoryCount: 3 },\n    { category: 'swords', name: 'diamond sword', description: 'Minecraft Diamond Sword', price: 'One Diamond', inventoryCount: 1 },\n    { category: 'helmets', name: 'wooden helmet', description: 'Minecraft Wooden Helmet', price: 'Two Sticks', inventoryCount: 5 },\n    { category: 'helmets', name: 'stone helmet', description: 'Minecraft Stone Helmet', price: 'Two Rocks', inventoryCount: 3 },\n    { category: 'helmets', name: 'diamond helmet', description: 'Minecraft Diamond Helmet', price: 'One Diamond', inventoryCount: 1 },\n  ]\n};\n\nexport const renderProducts = (category) => {\n  return {\n    type: 'DISPLAY-PRODUCTS',\n    payload: category\n  }\n}\n\nexport const increment = (name) => {\n  return {\n    type: 'INCREMENT',\n    payload: name,\n  };\n};\n\nconst productSelection = (state = initialState, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case 'INCREMENT': \n      let products = state.products.map(selection => {\n        if (selection.name === payload) {\n          return { name: selection.name, inventoryCount: selection.inventoryCount + 1 }\n        }\n        return selection;\n      });\n\n      return {...state, products};\n\n      case 'RESET':\n        return initialState;\n\n      default: \n      return state;\n  }\n}\n\nexport default productSelection;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { increment } from '../store/products-reducer';\nimport { categorySelection } from '../store/categories-reducer';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\n\nconst mapDispatchToProps = { increment, categorySelection };\n\nfunction Products(props) {\n  \n  const selectedProduct = (name) => {\n    props.increment(name);\n  }\n\n  useEffect(() => console.log('Props on Products:', props), [props]);\n\n  // Use to further style the cards: https://material-ui.com/components/cards/#simple-card\n  return (\n    <Container maxWidth='md'>\n      <Container id=\"product-selection\">\n        {props.products.products.map((product, idx) => (\n          <>\n            {(props.activeCategory === product.category) ?\n              <Card>\n                <CardContent key={idx}>\n                  <Typography>{product.description}</Typography>\n                  <Typography>Price: {product.price}</Typography>\n                  <Typography>Number in Stock: {product.inventoryCount}</Typography>\n                  <button onClick={() => selectedProduct(product.name)}>Add to Cart</button>\n                </CardContent>\n              </Card>\n              : ''\n            }\n          </>\n        ))}\n    </Container>\n  </Container>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  activeCategory: state.categories.active,\n  products: state.products\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import React from 'react';\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Categories from './components/categories';\nimport Products from './components/products';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Categories />\n      <Products />\n      <Footer />\n    </>\n);\n}\n\nexport default App;\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport categories from './categories-reducer';\nimport products from './products-reducer';\n\nlet reducers = combineReducers({ categories, products });\n\nconst store = () => {\n  return createStore(reducers, composeWithDevTools());\n}\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <CssBaseline />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}